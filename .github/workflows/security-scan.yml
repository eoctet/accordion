name: Security Scan

on:
  # Trigger on push to main and develop branches
  push:
    branches: [ main, develop ]
  
  # Trigger on pull requests
  pull_request:
    branches: [ main, develop ]
  
  # Scheduled weekly security scan (every Sunday at 2 AM UTC)
  schedule:
    - cron: '0 2 * * 0'
  
  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write
  security-events: write

jobs:
  security-scan:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Cache OWASP NVD database
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: ${{ runner.os }}-owasp-nvd-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-owasp-nvd-
      
      - name: Run OWASP Dependency Check
        id: dependency-check
        run: |
          echo "Running OWASP Dependency Check..."
          
          mvn org.owasp:dependency-check-maven:check \
            -Dformat=ALL \
            -DfailBuildOnCVSS=7 \
            -DsuppressionFile=owasp-suppressions.xml \
            -DossIndexAnalyzerEnabled=true \
            -DcentralAnalyzerEnabled=true
        continue-on-error: true
      
      - name: Parse security scan results
        id: parse-results
        run: |
          if [ -f "target/dependency-check-report.json" ]; then
            echo "Security scan completed successfully"
            
            # Parse JSON report for vulnerability counts
            TOTAL_VULNS=$(jq '.dependencies | map(.vulnerabilities // []) | flatten | length' target/dependency-check-report.json)
            HIGH_VULNS=$(jq '.dependencies | map(.vulnerabilities // []) | flatten | map(select(.severity == "HIGH")) | length' target/dependency-check-report.json)
            CRITICAL_VULNS=$(jq '.dependencies | map(.vulnerabilities // []) | flatten | map(select(.severity == "CRITICAL")) | length' target/dependency-check-report.json)
            MEDIUM_VULNS=$(jq '.dependencies | map(.vulnerabilities // []) | flatten | map(select(.severity == "MEDIUM")) | length' target/dependency-check-report.json)
            
            echo "total_vulnerabilities=$TOTAL_VULNS" >> $GITHUB_OUTPUT
            echo "high_vulnerabilities=$HIGH_VULNS" >> $GITHUB_OUTPUT
            echo "critical_vulnerabilities=$CRITICAL_VULNS" >> $GITHUB_OUTPUT
            echo "medium_vulnerabilities=$MEDIUM_VULNS" >> $GITHUB_OUTPUT
            
            # Determine security status
            if [ "$CRITICAL_VULNS" -gt 0 ] || [ "$HIGH_VULNS" -gt 0 ]; then
              echo "security_status=failed" >> $GITHUB_OUTPUT
            elif [ "$MEDIUM_VULNS" -gt 0 ]; then
              echo "security_status=warning" >> $GITHUB_OUTPUT
            else
              echo "security_status=passed" >> $GITHUB_OUTPUT
            fi
            
            # Create summary
            echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Critical | $CRITICAL_VULNS |" >> $GITHUB_STEP_SUMMARY
            echo "| High | $HIGH_VULNS |" >> $GITHUB_STEP_SUMMARY
            echo "| Medium | $MEDIUM_VULNS |" >> $GITHUB_STEP_SUMMARY
            echo "| **Total** | **$TOTAL_VULNS** |" >> $GITHUB_STEP_SUMMARY
            
          else
            echo "Security scan report not found"
            echo "security_status=error" >> $GITHUB_OUTPUT
          fi
      
      - name: Upload security scan reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-reports
          path: |
            target/dependency-check-report.html
            target/dependency-check-report.json
            target/dependency-check-report.xml
          retention-days: 30
      
      - name: Comment on PR with security results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const totalVulns = '${{ steps.parse-results.outputs.total_vulnerabilities }}';
            const criticalVulns = '${{ steps.parse-results.outputs.critical_vulnerabilities }}';
            const highVulns = '${{ steps.parse-results.outputs.high_vulnerabilities }}';
            const mediumVulns = '${{ steps.parse-results.outputs.medium_vulnerabilities }}';
            const securityStatus = '${{ steps.parse-results.outputs.security_status }}';
            
            let statusIcon = '';
            let statusMessage = '';
            
            if (securityStatus === 'passed') {
              statusIcon = '‚úÖ';
              statusMessage = 'No security vulnerabilities found';
            } else if (securityStatus === 'warning') {
              statusIcon = '‚ö†Ô∏è';
              statusMessage = 'Medium severity vulnerabilities detected';
            } else if (securityStatus === 'failed') {
              statusIcon = '‚ùå';
              statusMessage = 'High or critical vulnerabilities detected';
            } else {
              statusIcon = '‚ùå';
              statusMessage = 'Security scan failed';
            }
            
            const comment = `## ${statusIcon} Security Scan Results
            
            ${statusMessage}
            
            | Severity | Count |
            |----------|-------|
            | Critical | ${criticalVulns} |
            | High | ${highVulns} |
            | Medium | ${mediumVulns} |
            | **Total** | **${totalVulns}** |
            
            ${securityStatus === 'failed' ? '‚ö†Ô∏è **This PR cannot be merged due to high or critical security vulnerabilities.**' : ''}
            ${securityStatus === 'warning' ? '‚ö†Ô∏è **Please review medium severity vulnerabilities before merging.**' : ''}
            
            üìä [View detailed security report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: Create security issue on failure
        if: steps.parse-results.outputs.security_status == 'failed' && (github.event_name == 'push' || github.event_name == 'schedule')
        uses: actions/github-script@v7
        with:
          script: |
            const criticalVulns = '${{ steps.parse-results.outputs.critical_vulnerabilities }}';
            const highVulns = '${{ steps.parse-results.outputs.high_vulnerabilities }}';
            
            const title = `üîí Security Vulnerabilities Detected - ${criticalVulns} Critical, ${highVulns} High`;
            const body = `## Security Scan Alert
            
            **Scan Date**: ${new Date().toISOString()}
            **Commit**: ${context.sha}
            **Branch**: ${context.ref.replace('refs/heads/', '')}
            
            ### Vulnerability Summary
            
            | Severity | Count |
            |----------|-------|
            | Critical | ${criticalVulns} |
            | High | ${highVulns} |
            | **Total High/Critical** | **${parseInt(criticalVulns) + parseInt(highVulns)}** |
            
            ### Action Required
            
            ${criticalVulns > 0 ? 'üö® **Critical vulnerabilities require immediate attention**' : ''}
            ${highVulns > 0 ? '‚ö†Ô∏è **High severity vulnerabilities should be addressed promptly**' : ''}
            
            ### Next Steps
            
            1. Review the [detailed security report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            2. Update vulnerable dependencies to secure versions
            3. If vulnerabilities are false positives, add them to \`owasp-suppressions.xml\`
            4. Re-run the security scan to verify fixes
            
            ---
            
            This issue was automatically created by the Security Scan workflow.
            `;
            
            // Check for existing security issues
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['security', 'vulnerability'],
              state: 'open'
            });
            
            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'vulnerability', 'high-priority']
              });
            } else {
              // Update existing issue
              const existingIssue = existingIssues.data[0];
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                title: title,
                body: body
              });
            }
      
      - name: Close security issues on success
        if: steps.parse-results.outputs.security_status == 'passed' && (github.event_name == 'push' || github.event_name == 'schedule')
        uses: actions/github-script@v7
        with:
          script: |
            const openSecurityIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'security,vulnerability',
              state: 'open'
            });
            
            for (const issue of openSecurityIssues.data) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `‚úÖ **Security vulnerabilities resolved**\n\nAll high and critical vulnerabilities have been addressed. This issue is now closed.\n\n[View latest scan results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
              });
            }
      
      - name: Set workflow status
        if: always()
        run: |
          SECURITY_STATUS="${{ steps.parse-results.outputs.security_status }}"
          
          if [ "$SECURITY_STATUS" = "failed" ]; then
            echo "‚ùå Security scan failed - high or critical vulnerabilities found"
            exit 1
          elif [ "$SECURITY_STATUS" = "warning" ]; then
            echo "‚ö†Ô∏è Security scan completed with warnings - medium vulnerabilities found"
            exit 0
          elif [ "$SECURITY_STATUS" = "passed" ]; then
            echo "‚úÖ Security scan passed - no vulnerabilities found"
            exit 0
          else
            echo "‚ùå Security scan encountered an error"
            exit 1
          fi