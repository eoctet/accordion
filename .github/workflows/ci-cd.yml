name: CI/CD Pipeline

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  issues: write
  pull-requests: write

env:
  JAVA_VERSION: '17'
  MAVEN_OPTS: '-Xmx2048m -XX:MaxMetaspaceSize=512m'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: Build project
      run: |
        mvn clean compile -B
    
    - name: Run tests
      run: |
        mvn test -B
    
    - name: Generate test report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results
        path: target/surefire-reports/TEST-*.xml
        reporter: java-junit
        fail-on-error: false
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: target/surefire-reports/
        retention-days: 7

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: Compile for analysis
      run: mvn clean compile test-compile -B
    
    - name: Run Checkstyle
      run: mvn checkstyle:check -B
      continue-on-error: true
    
    - name: Run SpotBugs
      run: mvn spotbugs:check -B
      continue-on-error: true
    
    - name: Run PMD
      run: mvn pmd:check -B
      continue-on-error: true
    
    - name: Upload quality reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          target/checkstyle-result.xml
          target/spotbugsXml.xml
          target/pmd.xml
        retention-days: 7

  package:
    name: Package Artifacts
    runs-on: ubuntu-latest
    needs: [build, code-quality]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: Package application
      run: mvn package -DskipTests -B
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: accordion-jar
        path: target/accordion-*.jar
        retention-days: 30

  deploy:
    name: Deploy to Maven Central
    runs-on: ubuntu-latest
    needs: package
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        server-id: 'ossrh'
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.MAVEN_PRIVATE_KEY }}
    
    - name: Deploy to Maven Central
      run: mvn clean package deploy -DskipTests -B
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_REPO_NAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_REPO_CODE }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_PRIVATE_KEY_PASS }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: target/accordion-*.jar
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}